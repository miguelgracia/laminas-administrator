<?php

/**
 * Generated by ZF2ModuleCreator
 */

namespace AmModule;

use Zend\ModuleManager\Feature\AutoloaderProviderInterface;
use Zend\ModuleManager\Feature\ConfigProviderInterface;
use Zend\Mvc\MvcEvent;

class Module implements AutoloaderProviderInterface, ConfigProviderInterface
{

    /**
     * Returns configuration to merge with application configuration
     *
     * @return array|\Traversable
     */
    public function getConfig()
    {
        return include __DIR__ . '/config/module.config.php';
    }

    /**
     * Return an array for passing to Zend\Loader\AutoloaderFactory.
     *
     * @return array
     */
    public function getAutoloaderConfig()
    {
        return array(
            'Zend\Loader\StandardAutoloader' => array(
                'namespaces' => array(
                    // Autoload all classes from namespace 'AmController' from '/module/AmController/src/AmController'
                    __NAMESPACE__ => __DIR__ . '/src/' . __NAMESPACE__,
                )
            )
        );
    }

    public function onBootstrap(MvcEvent $e)
    {
        $serviceManager = $e->getApplication()->getServiceManager();
        $translator = $serviceManager->get('translator');

        $locale = $translator->getLocale();

        //Cargamos las traducciones de los módulos del administrador
        $adminModules = $serviceManager->get('AmModule\Service\ModuleService')->getModules();

        foreach ($adminModules as $module) {
            $translateFile = __DIR__."/../$module/language/$locale/locale.php";
            $translateFile = str_replace('/',DIRECTORY_SEPARATOR,$translateFile);
            if (is_file($translateFile)) {
                $translator->getTranslator()->addTranslationFile(
                    'phpArray',
                    $translateFile,
                    'default',
                    $locale);
            }
        }
    }
}